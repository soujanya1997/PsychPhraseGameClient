
import java.applet.AudioClip;
import java.awt.Color;
import java.rmi.Naming;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.text.DefaultCaret;
import sun.audio.AudioPlayer;
import sun.audio.AudioStream;
import sun.awt.AWTAccessor;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */



public class PlayerForm extends javax.swing.JFrame{

    /**
     * Creates new form ChatForm
     */
    public PlayerForm() {
        initComponents();
        DefaultCaret caret = (DefaultCaret)questionLogs.getCaret();
        caret.setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE);
    }
    String name,ip,actualAns;
    ClientInterface ci;
    ServerInterface si;
    AudioClip click ;
    int questionAttempted=0,correctAns;
    float progressValue=0;
    public PlayerForm(String s, String ip) 
    {
        name=s;
        this.ip=ip;
        initComponents();
        setTitle("PSYCH GAME PLAYER : "+name);
        try{
        ci=new ClientClass(onlinePlayers,questionLogs,liveChat,question,trick,answer,exit,talk,this);
        si=(ServerInterface)
                Naming.lookup("rmi://"+ ip + "/chat");
        si.registerUser(ci, name);
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, "Error in registering user\nEither:\nUser already exists\nor\nUnable to establish connection");
            NameForm.cf1.dispose();
            CLIENT.nform.setVisible(true);
        }
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        onlinePlayers = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        questionLogs = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        optionEntry = new javax.swing.JTextArea();
        trick = new javax.swing.JButton();
        question = new javax.swing.JButton();
        answer = new javax.swing.JButton();
        exit = new javax.swing.JButton();
        talk = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        liveChat = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        Message = new javax.swing.JTextArea();
        progress = new javax.swing.JProgressBar();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setLocationByPlatform(true);
        setMinimumSize(new java.awt.Dimension(1350, 700));
        setResizable(false);
        setSize(new java.awt.Dimension(1350, 700));
        getContentPane().setLayout(null);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/spider.gif"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(240, 370, 330, 300);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/smallspider.gif"))); // NOI18N
        getContentPane().add(jLabel3);
        jLabel3.setBounds(1080, 360, 240, 270);

        jScrollPane1.setBorder(null);
        jScrollPane1.setForeground(new java.awt.Color(102, 0, 102));
        jScrollPane1.setToolTipText("");

        onlinePlayers.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "ONLINE PLAYERS", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("DejaVu Sans", 1, 18), new java.awt.Color(2, 114, 23))); // NOI18N
        onlinePlayers.setFont(new java.awt.Font("URW Gothic L", 1, 24)); // NOI18N
        onlinePlayers.setForeground(new java.awt.Color(1, 54, 139));
        jScrollPane1.setViewportView(onlinePlayers);
        onlinePlayers.getAccessibleContext().setAccessibleName("Online Players");

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(30, 80, 210, 440);

        jScrollPane2.setBorder(null);

        questionLogs.setEditable(false);
        questionLogs.setColumns(20);
        questionLogs.setFont(new java.awt.Font("Waree", 1, 20)); // NOI18N
        questionLogs.setLineWrap(true);
        questionLogs.setRows(5);
        questionLogs.setTabSize(1);
        questionLogs.setWrapStyleWord(true);
        questionLogs.setAutoscrolls(false);
        questionLogs.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "QUESTION LOGS ", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Arial Black", 1, 18), new java.awt.Color(0, 102, 102))); // NOI18N
        jScrollPane2.setViewportView(questionLogs);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(260, 80, 670, 440);

        jScrollPane3.setBorder(null);
        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane3.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        optionEntry.setBackground(new java.awt.Color(1, 1, 1));
        optionEntry.setColumns(15);
        optionEntry.setFont(new java.awt.Font("Ubuntu", 1, 36)); // NOI18N
        optionEntry.setForeground(new java.awt.Color(254, 254, 254));
        optionEntry.setLineWrap(true);
        optionEntry.setRows(1);
        optionEntry.setTabSize(1);
        optionEntry.setWrapStyleWord(true);
        optionEntry.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5), "OPTION ENTRY", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Arial Black", 1, 18), new java.awt.Color(254, 254, 254))); // NOI18N
        optionEntry.setCaretColor(new java.awt.Color(224, 19, 19));
        optionEntry.setSelectionColor(new java.awt.Color(240, 70, 76));
        jScrollPane3.setViewportView(optionEntry);

        getContentPane().add(jScrollPane3);
        jScrollPane3.setBounds(430, 560, 350, 110);

        trick.setFont(new java.awt.Font("Waree", 1, 21)); // NOI18N
        trick.setForeground(new java.awt.Color(255, 110, 0));
        trick.setText("TRICK");
        trick.setEnabled(false);
        trick.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trickActionPerformed(evt);
            }
        });
        getContentPane().add(trick);
        trick.setBounds(790, 560, 140, 50);

        question.setFont(new java.awt.Font("Waree", 1, 18)); // NOI18N
        question.setForeground(new java.awt.Color(1, 98, 169));
        question.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image.jpg"))); // NOI18N
        question.setText("QUESTION");
        question.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        question.setIconTextGap(0);
        question.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        question.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        question.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                questionActionPerformed(evt);
            }
        });
        getContentPane().add(question);
        question.setBounds(260, 560, 160, 110);

        answer.setFont(new java.awt.Font("Waree", 1, 21)); // NOI18N
        answer.setForeground(new java.awt.Color(86, 161, 81));
        answer.setText("ANSWER");
        answer.setEnabled(false);
        answer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                answerActionPerformed(evt);
            }
        });
        getContentPane().add(answer);
        answer.setBounds(790, 620, 140, 50);

        exit.setFont(new java.awt.Font("Waree", 1, 18)); // NOI18N
        exit.setForeground(new java.awt.Color(115, 1, 1));
        exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/thisFinal.png"))); // NOI18N
        exit.setText("EXIT");
        exit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        exit.setIconTextGap(1);
        exit.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        exit.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });
        getContentPane().add(exit);
        exit.setBounds(30, 560, 210, 110);

        talk.setFont(new java.awt.Font("Waree", 1, 18)); // NOI18N
        talk.setForeground(new java.awt.Color(32, 1, 152));
        talk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rsz_stest.png"))); // NOI18N
        talk.setText("SEND");
        talk.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        talk.setIconTextGap(0);
        talk.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        talk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                talkActionPerformed(evt);
            }
        });
        getContentPane().add(talk);
        talk.setBounds(1230, 560, 90, 110);

        jScrollPane4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.white, java.awt.Color.red, java.awt.Color.pink));

        liveChat.setEditable(false);
        liveChat.setColumns(20);
        liveChat.setFont(new java.awt.Font("Waree", 1, 18)); // NOI18N
        liveChat.setLineWrap(true);
        liveChat.setRows(2);
        liveChat.setTabSize(1);
        liveChat.setWrapStyleWord(true);
        liveChat.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), " LIVE CHAT", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Arial Black", 1, 18), new java.awt.Color(0, 102, 102))); // NOI18N
        jScrollPane4.setViewportView(liveChat);

        getContentPane().add(jScrollPane4);
        jScrollPane4.setBounds(950, 80, 370, 440);

        Message.setColumns(1);
        Message.setFont(new java.awt.Font("Ubuntu", 1, 25)); // NOI18N
        Message.setLineWrap(true);
        Message.setRows(1);
        Message.setTabSize(1);
        Message.setWrapStyleWord(true);
        Message.setAutoscrolls(false);
        jScrollPane5.setViewportView(Message);

        getContentPane().add(jScrollPane5);
        jScrollPane5.setBounds(950, 560, 270, 110);

        progress.setBackground(new java.awt.Color(211, 60, 60));
        progress.setFont(new java.awt.Font("Waree", 1, 36)); // NOI18N
        progress.setForeground(new java.awt.Color(1, 180, 35));
        progress.setStringPainted(true);
        getContentPane().add(progress);
        progress.setBounds(30, 30, 1290, 40);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/4468977-cool-wallpapers-hd.jpg"))); // NOI18N
        jLabel2.setText("jLabel2");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(-290, -70, 1760, 850);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void trickActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trickActionPerformed
        new Sound("abc.wav");
        try{
            
            try{
                ServerInterface si=(ServerInterface)Naming.lookup("rmi://"+ ip + "/chat");
                actualAns=si.getCorrectAns();
                actualAns=actualAns.toLowerCase();
                        
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(this, "connection failed");
            }
            String msg=optionEntry.getText();
            msg = msg.toLowerCase();
            String testMsg = msg + "\n";
            System.out.println(testMsg + " " + actualAns);
            if(msg.equals("")){
            }
            else if(testMsg.equals(actualAns)){
                JOptionPane.showMessageDialog(this, "ENTER ANOTHER OPTION");
            }
            else{
            ServerInterface si=(ServerInterface)Naming.lookup("rmi://"+ ip + "/chat");
            si.sendMessage("3" + name+ ":"+msg + "\n");
            optionEntry.setText("");
            trick.setEnabled(false);
            questionAttempted++;
            }
        }
        catch(Exception e)
        {
        JOptionPane.showMessageDialog(this, "error in trick action performed");
        System.exit(0);
        }
    }//GEN-LAST:event_trickActionPerformed
    
    private void questionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_questionActionPerformed
        new Sound("abc.wav");
        try{
        ServerInterface si=(ServerInterface)Naming.lookup("rmi://"+ ip + "/chat");
        si.sendMessage("1");
        this.trick.setEnabled(true);
        this.question.setEnabled(false);
        }catch(Exception e)
        {
        JOptionPane.showMessageDialog(this, "error in question action performed");
        System.exit(0);
        }
    }//GEN-LAST:event_questionActionPerformed

    private void answerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_answerActionPerformed
        new Sound("abc.wav");
        int ans = 0 ;
        try{
        String msg=optionEntry.getText();
            try{
                ans=Integer.parseInt(msg);
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(this, "Enter Option Number!");
            }
        ServerInterface si=(ServerInterface)Naming.lookup("rmi://"+ ip + "/chat");
        int userCount=si.getUsersCount();
        System.out.println(userCount);
      
        if(ans>0 && ans<=userCount+1){
            System.out.println("Answer accepted") ;
            ServerInterface si1=(ServerInterface)Naming.lookup("rmi://"+ ip + "/chat");
            si1.sendMessage("4"+name+":"+msg);
            optionEntry.setText("");
            answer.setEnabled(false);
            correctAns=si.getCorrectCount(name);
            
            try{
                progressValue=(float)correctAns/questionAttempted;
                System.out.println(progressValue+" "+questionAttempted);
            }
            catch(ArithmeticException e){
                progressValue = 0 ;
            }
            this.progress.setValue((int) (progressValue*100));
        }
        else{
            JOptionPane.showMessageDialog(this, "Enter valid option!");
        }
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, "error in answer action performed");
            System.exit(0);

        }
    }//GEN-LAST:event_answerActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        new Sound("abc.wav");
        questionLogs.setText("");
        try {
            si.removeUser(name);
            this.dispose();
        } catch (Exception ex) {
            Logger.getLogger(PlayerForm.class.getName()).log(Level.SEVERE, null, ex);
            System.exit(0);
        }
    }//GEN-LAST:event_exitActionPerformed

    private void talkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_talkActionPerformed
        new Sound("abc.wav");
        try{
        String msg=Message.getText();
        if(msg.equals("")){
        }
        else{
        ServerInterface si=(ServerInterface)Naming.lookup("rmi://"+ ip + "/chat");
        si.sendMessageLive(name+":   "+msg);
        Message.setText("");
        }
        }catch(Exception e)
        {
        JOptionPane.showMessageDialog(this,"error in exit action performed");
        System.exit(0);
        
        }
          
    }//GEN-LAST:event_talkActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PlayerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PlayerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PlayerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PlayerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PlayerForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea Message;
    private javax.swing.JButton answer;
    private javax.swing.JButton exit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextArea liveChat;
    private javax.swing.JList<String> onlinePlayers;
    private javax.swing.JTextArea optionEntry;
    private javax.swing.JProgressBar progress;
    private javax.swing.JButton question;
    private javax.swing.JTextArea questionLogs;
    private javax.swing.JButton talk;
    private javax.swing.JButton trick;
    // End of variables declaration//GEN-END:variables

   
}
